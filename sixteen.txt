
 In Python, many exceptions can be handled by a single except block. You can accomplish this by giving a tuple of exception types. Python will see if the exception matches any of the tuple's types when it is raised. If so, the exception will be handled by the matching unless block.

Contains code that might raise multiple exceptions (ValueError or ZeroDivisionError).

 This allows for concise and efficient error handling when you want the same response for different exceptions. However, if you need to handle different exceptions differently, you can use multiple except blocks, each handling a specific type of exception.

try:
    number = int(input("Enter a number: "))
    result = 10 / number
except ValueError:
    print("That's not a valid number!")
except ZeroDivisionError:
    print("You can't divide by zero!")
except Exception as e:
    print("An unexpected error occurred:" (e))
else:
    print("Division successful, result:" (result))
finally:
    print("Execution of the try-except block is complete.")

